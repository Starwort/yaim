{"version":3,"sources":["components/AppBar.tsx","i18n.ts","components/LanguageDialogue.tsx","components/AppFrame.tsx","components/Centred.tsx","components/DrawerAdjust.tsx","components/NavigationDrawer.tsx","prototype_mods.ts","themes/common_theme_data.ts","themes/dark.ts","themes/light.ts","themes/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppBar","setDrawerOpen","drawerOpen","title","position","Toolbar","IconButton","edge","color","style","marginRight","onClick","Typography","variant","availableLocalisations","LanguageDialogue","props","t","useTranslation","Dialog","open","PaperProps","width","DialogTitle","textAlign","id","List","map","lang","ListItem","button","setLang","ListItemText","primary","AppFrame","theme","useTheme","startOpen","useMediaQuery","breakpoints","up","React","useState","useEffect","i18n","langOpen","setLangOpen","NavigationDrawer","setOpen","setTheme","fileTree","value","changeLanguage","DrawerAdjust","active","children","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","process","interpolation","escapeValue","react","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","supportedLngs","ns","defaultNS","useStyles","createUseStyles","base","display","height","top","alignItems","vcentre","bottom","left","justifyContent","hcentre","right","Centred","verticalAlign","horizontalAlign","classes","VERT_OPTIONS","centre","HOR_OPTIONS","className","matches","paddingLeft","transition","DrawerContent","onSelect","newTheme","name","flexGrow","ListItemIcon","Language","container","undefined","window","document","body","Hidden","smUp","Drawer","anchor","direction","onClose","xsDown","String","prototype","capitalise","this","charAt","toUpperCase","slice","Array","rotated","by","length","concat","rotate","push","apply","splice","count","elem","filter","item","commonProps","MuiTextField","MuiSelect","MuiFormControl","MuiDialogTitle","createTheme","palette","type","opacity","elevations","main","contrastText","secondary","error","background","paper","default","text","hint","disabled","zIndex","appBar","overrides","MuiAppBar","colorPrimary","backgroundColor","colorSecondary","colorDefault","MuiDrawer","MuiCard","root","borderWidth","borderColor","borderStyle","MuiCardHeader","paddingBottom","MuiListItemIcon","dark","light","themes","defaultSettings","App","localStorage","settings","JSON","stringify","parse","setSettingsImpl","useMemo","getTheme","ThemeProvider","CssBaseline","classList","add","setSettings","setTimeout","remove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","fallback","getElementById"],"mappings":"6PAWO,SAASA,EAAT,GAAkE,IAAjDC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,MAC/C,OACI,qCACI,cAAC,IAAD,CAAWC,SAAS,QAApB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAM,UAAU,aAAW,OAChDC,MAAO,CAACC,YAAa,IACrBC,QAAS,kBAAMV,GAAeC,IAFlC,SAGI,cAAC,IAAD,MAEJ,cAACU,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACKV,SAIb,cAACE,EAAA,EAAD,O,2GCrBCS,EAAyB,CAAC,MCIhC,SAASC,EAAiBC,GAC7B,IAAOC,EAAKC,YAAe,QAApBD,EACP,OAAO,eAACE,EAAA,EAAD,CAAQ,kBAAgB,sBAAsBC,KAAMJ,EAAMI,KAAMC,WAAY,CAACZ,MAAO,CAACa,MAAO,MAA5F,UACH,cAACC,EAAA,EAAD,CAAad,MAAO,CAACe,UAAW,UAAWC,GAAG,sBAA9C,SAAqER,EAAE,sBACvE,cAACS,EAAA,EAAD,UACKZ,EAAuBa,KAAI,SAAAC,GAAI,OAC5B,cAACC,EAAA,EAAD,CAAqBpB,MAAO,CAACe,UAAW,UAAWM,QAAM,EAACnB,QAAS,kBAAMK,EAAMe,QAAQH,IAAvF,SACI,cAACI,EAAA,EAAD,CAAcC,QAAShB,EAAE,aAAD,OAAcW,OAD3BA,WCFxB,SAASM,EAASlB,GACrB,IAAMmB,EAAQC,cACRC,EAAYC,YAAcH,EAAMI,YAAYC,GAAG,OACrD,EAAoCC,IAAMC,UAAS,GAAnD,mBAAOxC,EAAP,KAAmBD,EAAnB,KACAwC,IAAME,WAAU,WACZ1C,EAAcoC,KACf,CAACA,IACJ,MAAkBnB,YAAe,QAA1BD,EAAP,EAAOA,EAAG2B,EAAV,EAAUA,KACV,EAAgCH,IAAMC,UAAS,GAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,OACI,qCACI,cAAC,EAAD,CACI7C,cAAeA,EACfC,WAAYA,EACZC,MACI,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACKI,EAAE,kBAIf,cAAC8B,EAAD,CACI3B,KAAMlB,EACN8C,QAAS/C,EACTgD,SAAUjC,EAAMiC,SAChBH,YAAaA,EAJjB,SAMK9B,EAAMkC,WAEX,cAACnC,EAAD,CAAkBK,KAAMyB,EAAUd,QAAS,SAACoB,GACxCP,EAAKQ,eAAeD,GACpBL,GAAY,MAEhB,cAACO,EAAD,CAAcC,OAAQpD,EAAtB,SACKc,EAAMuC,cFfvBX,IAAKY,IAAIC,KACJD,IAAIE,KACJF,IAAIG,KACJC,KAAK,CACFC,QAAS,CAACC,SAAU,qCACpBC,YAAa,KACbC,OAAOC,EAEPC,cAAe,CACXC,aAAa,GAEjBC,MAAO,CACHC,4BAA4B,EAC5BC,2BAA4B,CAAC,KAAM,MAAO,QAAS,OAAQ,OAE/DC,cAAezD,EACf0D,GAAI,OACJC,UAAW,S,YGvCbC,EAAYC,YAAgB,CAC9BC,KAAM,CACFC,QAAS,OACTC,OAAQ,OACRxD,MAAO,QAEXyD,IAAK,CACDC,WAAY,cAEhBC,QAAS,CACLD,WAAY,UAEhBE,OAAQ,CACJF,WAAY,YAEhBG,KAAM,CACFC,eAAgB,cAEpBC,QAAS,CACLD,eAAgB,UAEpBE,MAAO,CACHF,eAAgB,cAIjB,SAASG,EAAT,GAA4E,IAA1DhC,EAAyD,EAAzDA,SAAUiC,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,gBACxCC,EAAUhB,IACViB,EAAe,CACjBZ,IAAKW,EAAQX,IACba,OAAQF,EAAQT,QAChBC,OAAQQ,EAAQR,QAEdW,EAAc,CAChBV,KAAMO,EAAQP,KACdS,OAAQF,EAAQL,QAChBC,MAAOI,EAAQJ,OAEnB,OAAO,qBAAKQ,UAAWJ,EAAQd,KAAO,IAAMe,EAAY,OAACH,QAAD,IAACA,IAAiB,UAAY,IAAMK,EAAW,OAACJ,QAAD,IAACA,IAAmB,UAApH,SACFlC,ICzCF,SAASF,EAAarC,GACzB,IAAMmB,EAAQC,cACR2D,EAAUzD,YAAcH,EAAMI,YAAYC,GAAG,OACnD,OACI,qBAAK/B,MAAO,CAACuF,YAAa,KAAQhF,EAAMsC,QAAYyC,EAAUE,WAAY,uDAA1E,SACKjF,EAAMuC,W,0ECCnB,SAAS2C,EAAT,GAKwB,IAJpBC,EAImB,EAJnBA,SACAlD,EAGmB,EAHnBA,SACAH,EAEmB,EAFnBA,YACAS,EACmB,EADnBA,SAEOtC,EAAKC,YAAe,QAApBD,EAEDmF,EAAqC,SAD7BhE,cACoBiE,KAAkB,QAAU,OAC9D,OAAO,qCACF9C,EACD,qBAAK9C,MAAO,CAAC6F,SAAU,KACvB,eAACzE,EAAA,EAAD,CAAUC,QAAM,EAACnB,QAAS,WAAOmC,GAAY,GAAWqD,GAAWA,KAAnE,UACI,cAACI,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,MAEJ,cAACxE,EAAA,EAAD,CAAcC,QAAShB,EAAE,0BAE7B,eAACY,EAAA,EAAD,CAAUC,QAAM,EAACnB,QAAS,WAAOsC,EAASmD,GAAeD,GAAWA,KAApE,UACI,cAACI,EAAA,EAAD,UAEqB,SAAbH,EACM,cAAC,IAAD,IACA,cAAC,IAAD,MAGd,cAACpE,EAAA,EAAD,CAAcC,QAAShB,EAAE,8BAc9B,SAAS8B,EAAiB/B,GAC7B,IAAMmB,EAAQC,cACRqE,OAAuBC,IAAXC,OAAuB,kBAAMA,OAAOC,SAASC,WAAOH,EACtE,OAAO,qCACH,cAACI,EAAA,EAAD,CAAQC,MAAI,EAAZ,SACI,cAACC,EAAA,EAAD,CACInG,QAAQ,YACR4F,UAAWA,EACXQ,OAA4B,QAApB9E,EAAM+E,UAAsB,QAAU,OAC9C9F,KAAMJ,EAAMI,KACZ+F,QAAS,kBAAMnG,EAAMgC,SAAQ,IALjC,SAOI,cAACkD,EAAD,CACIC,SAAU,kBAAMnF,EAAMgC,SAAQ,IAC9BC,SAAUjC,EAAMiC,SAChBH,YAAa9B,EAAM8B,YAHvB,SAKK9B,EAAMuC,eAInB,cAACuD,EAAA,EAAD,CAAQM,QAAM,EAAd,SACI,eAACJ,EAAA,EAAD,CACInG,QAAQ,aACRoG,OAA4B,QAApB9E,EAAM+E,UAAsB,QAAU,OAC9C9F,KAAMJ,EAAMI,KAHhB,UAKI,cAACf,EAAA,EAAD,IACA,cAAC6F,EAAD,CACIjD,SAAUjC,EAAMiC,SAChBH,YAAa9B,EAAM8B,YAFvB,SAIK9B,EAAMuC,mB,YCxE3B8D,OAAOC,UAAUC,WAAa,WAC1B,OAAOC,KAAKC,OAAO,GAAGC,cAAgBF,KAAKG,MAAM,IAGrDC,MAAMN,UAAUO,QAAU,SAAUC,GAEhC,OADAA,GAAUN,KAAKO,OACRP,KAAKG,MAAMG,EAAIN,KAAKO,QAAQC,OAAOR,KAAKG,MAAM,EAAGG,KAG5DF,MAAMN,UAAUW,OAAS,SAAUH,GAE/B,IADAA,GAAUN,KAAKO,OACRP,KAAKO,QAAUD,EAAK,GAAGA,GAAMN,KAAKO,OAEzC,OADAP,KAAKU,KAAKC,MAAMX,KAAMA,KAAKY,OAAO,EAAGN,IAC9BN,MAGXI,MAAMN,UAAUe,MAAQ,SAAUC,GAC9B,OAAOd,KAAKe,QAAO,SAAAC,GAAI,OAAIA,IAASF,KAAMP,QC5B9C,IAAMU,EAA+B,CACjCC,aAAc,CACV7H,QAAS,UAEb8H,UAAW,CACP9H,QAAS,UAEb+H,eAAgB,CACZ/H,QAAS,UAEbgI,eAAgB,CACZpI,MAAO,CAACe,UAAW,YCPrBW,EAAQ2G,YAAY,CACtBC,QAAS,CACLC,KAAM,OACNC,QAAS,GACTC,WAAY,CACR,EAAG,CAACC,KAAM,WACV,EAAG,CAACA,KAAM,WACV,EAAG,CAACA,KAAM,WACV,EAAG,CAACA,KAAM,WACV,EAAG,CAACA,KAAM,WACV,EAAG,CAACA,KAAM,WACV,EAAG,CAACA,KAAM,WACV,GAAI,CAACA,KAAM,WACX,GAAI,CAACA,KAAM,WACX,GAAI,CAACA,KAAM,YAEflH,QAAS,CACLkH,KAAM,UACNC,aAAc,mBAElBC,UAAW,CACPF,KAAM,UACNC,aAAc,mBAElBE,MAAO,CACHH,KAAM,WAEVI,WAAY,CACRC,MAAO,UACPC,QAAS,WAEbC,KAAM,CACFzH,QAAS,wBACToH,UAAW,wBACXM,KAAM,wBACNC,SAAU,0BAGlBC,OAAQ,CACJC,OAAQ,MAEZ9I,MAAOyH,IAGXtG,EAAM4H,UAAY,CACdC,UAAW,CACPC,aAAc,CACVC,gBAAiB/H,EAAM4G,QAAQQ,WAAWC,MAC1ChJ,MAAO2B,EAAM4G,QAAQ9G,QAAQkH,MAEjCgB,eAAgB,CACZD,gBAAiB/H,EAAM4G,QAAQQ,WAAWC,MAC1ChJ,MAAO2B,EAAM4G,QAAQM,UAAUF,MAEnCiB,aAAc,CACVF,gBAAiB/H,EAAM4G,QAAQQ,WAAWC,MAC1ChJ,MAAO2B,EAAM4G,QAAQW,KAAKzH,UAGlCoI,UAAW,CACPb,MAAO,CACHlI,MAAO,MAGfgJ,QAAS,CACLC,KAAM,CACFC,YAAa,EACbC,YAAa,0BACbC,YAAa,UAGrBC,cAAe,CACXJ,KAAM,CACFK,cAAe,EACfpJ,UAAW,WAGnBqJ,gBAAiB,CACbN,KAAM,CACF/J,MAAO2B,EAAM4G,QAAQW,KAAKL,aAKvBlH,QCrFTA,EAAQ2G,YAAY,CACtBC,QAAS,CACLC,KAAM,QACNC,QAAS,GACTC,WAAY,CACR,EAAG,CAACC,KAAM,WACV,EAAG,CAACA,KAAM,WACV,EAAG,CAACA,KAAM,WACV,EAAG,CAACA,KAAM,WACV,EAAG,CAACA,KAAM,WACV,EAAG,CAACA,KAAM,WACV,EAAG,CAACA,KAAM,WACV,GAAI,CAACA,KAAM,WACX,GAAI,CAACA,KAAM,WACX,GAAI,CAACA,KAAM,YAEflH,QAAS,CACLkH,KAAM,UACNC,aAAc,yBAElBC,UAAW,CACPF,KAAM,UACNC,aAAc,mBAElBE,MAAO,CACHH,KAAM,WAEVI,WAAY,CACRC,MAAO,UACPC,QAAS,WAEbC,KAAM,CACFzH,QAAS,kBACToH,UAAW,kBACXM,KAAM,kBACNC,SAAU,oBAGlBC,OAAQ,CACJC,OAAQ,MAEZ9I,MAAOyH,IAGXtG,EAAM4H,UAAY,CACdM,UAAW,CACPb,MAAO,CACHlI,MAAO,MAGfgJ,QAAS,CACLC,KAAM,CACFC,YAAa,EACbC,YAAa,cACbC,YAAa,UAGrBC,cAAe,CACXJ,KAAM,CACFK,cAAe,EACfpJ,UAAW,YAKRW,QCnEf2I,EAAKzE,KAAO,OACZ0E,EAAM1E,KAAO,QAEb,IAAM2E,GAAS,CACXD,QACAD,QCAG,IAAMG,GAA4B,CACrC9I,MAAO,QAoCI+I,OAjCf,WACSvE,OAAOwE,aAAaC,WACrBzE,OAAOwE,aAAaC,SAAWC,KAAKC,UAAUL,KAElD,MAAoCvI,oBAAmB,kBAAM2I,KAAKE,MAAM5E,OAAOwE,aAAaC,aAA5F,mBAAOA,EAAP,KAAiBI,EAAjB,KAWMrJ,EAAQsJ,mBACV,kBDfO,SAAkBtJ,GAC7B,OAAO6I,GAAO7I,GCcJuJ,CAASN,EAASjJ,SACxB,CAACiJ,IAEL,OACI,eAACO,EAAA,EAAD,CAAexJ,MAAOA,EAAtB,UACI,cAACyJ,EAAA,EAAD,IACA,cAAC1J,EAAD,CAAUgB,SAAU,2CAAUD,SAbtC,SAAkBE,GACdyD,SAASC,KAAKgF,UAAUC,IAAI,iBALhC,SAAqB3I,GACjBwD,OAAOwE,aAAaC,SAAWC,KAAKC,UAAUnI,GAC9CqI,EAAgBrI,GAIhB4I,CAAY,2BAAIX,GAAL,IAAejJ,MAAOgB,KAEjC6I,YAAW,kBAAMpF,SAASC,KAAKgF,UAAUI,OAAO,mBAAkB,KAS9D,SACI,cAAC1G,EAAD,UACI,cAAC3E,EAAA,EAAD,oCCtBLsL,I,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCHdQ,IAASC,OACL,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACI,cAAC,GAAD,MAEJjG,SAASkG,eAAe,SAM5BZ,O","file":"static/js/main.e76782e5.chunk.js","sourcesContent":["import {AppBar as TopAppBar, IconButton, Toolbar, Typography} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React from 'react';\n\n\ninterface AppBarProps {\n    setDrawerOpen: (value: boolean) => void;\n    drawerOpen: boolean;\n    title: React.ReactNode;\n}\n\nexport function AppBar({setDrawerOpen, drawerOpen, title}: AppBarProps) {\n    return (\n        <>\n            <TopAppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\"\n                        style={{marginRight: 16}}\n                        onClick={() => setDrawerOpen(!drawerOpen)}>\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\">\n                        {title}\n                    </Typography>\n                </Toolbar>\n            </TopAppBar>\n            <Toolbar />\n        </>\n    );\n}\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\nimport {initReactI18next} from 'react-i18next';\n\nexport const availableLocalisations = ['en'];\n\nconst jaCharMap: Record<string, string> = {\n    '0': '０',\n    '1': '１',\n    '2': '２',\n    '3': '３',\n    '4': '４',\n    '5': '５',\n    '6': '６',\n    '7': '７',\n    '8': '８',\n    '9': '９',\n    'a': 'ａ',\n    'b': 'ｂ',\n    'c': 'ｃ',\n    'd': 'ｄ',\n    'e': 'ｅ',\n    'f': 'ｆ',\n};\nexport const numberFormatters: Record<string, (value: number | string) => string> = {\n    'en': (value) => value.toString(),\n    'fr': (value) => value.toString(),\n    'ja': (value) => value.toString().replace(/[012456789abcdef]/g, (m) => jaCharMap[m]),\n};\n\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        backend: {loadPath: './assets/i18n/{{lng}}/{{ns}}.json'},\n        fallbackLng: 'en',\n        debug: process.env.NODE_ENV === 'development',\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n        react: {\n            transSupportBasicHtmlNodes: true,\n            transKeepBasicHtmlNodesFor: ['br', 'big', 'small', 'ruby', 'rt'],\n        },\n        supportedLngs: availableLocalisations,\n        ns: 'core',\n        defaultNS: 'core',\n    });","import {Dialog, DialogTitle, List, ListItem, ListItemText} from \"@material-ui/core\";\nimport {useTranslation} from \"react-i18next\";\nimport {availableLocalisations} from \"../i18n\";\n\ninterface LanguageDialogueProps {\n    open: boolean;\n    setLang: (lang: string) => void;\n}\n\nexport function LanguageDialogue(props: LanguageDialogueProps) {\n    const {t} = useTranslation('core');\n    return <Dialog aria-labelledby=\"lang-dialogue-title\" open={props.open} PaperProps={{style: {width: 250}}}>\n        <DialogTitle style={{textAlign: 'center'}} id=\"lang-dialogue-title\">{t('core:lang.choose')}</DialogTitle>\n        <List>\n            {availableLocalisations.map(lang =>\n                <ListItem key={lang} style={{textAlign: 'center'}} button onClick={() => props.setLang(lang)}>\n                    <ListItemText primary={t(`core:lang.${lang}`)} />\n                </ListItem>\n            )}\n        </List>\n    </Dialog>;\n}","import {Typography, useMediaQuery, useTheme} from '@material-ui/core';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {AppBar, DrawerAdjust, NavigationDrawer} from '.';\nimport {ThemeName} from '../themes';\nimport {LanguageDialogue} from './LanguageDialogue';\n\n\ninterface AppFrameProps {\n    setTheme: (value: ThemeName) => void;\n    children: React.ReactNode;\n    fileTree: React.ReactNode;\n}\nexport function AppFrame(props: AppFrameProps) {\n    const theme = useTheme();\n    const startOpen = useMediaQuery(theme.breakpoints.up('lg'));\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    React.useEffect(() => {\n        setDrawerOpen(startOpen);\n    }, [startOpen]);\n    const {t, i18n} = useTranslation('core');\n    const [langOpen, setLangOpen] = React.useState(false);\n    return (\n        <>\n            <AppBar\n                setDrawerOpen={setDrawerOpen}\n                drawerOpen={drawerOpen}\n                title={\n                    <Typography variant=\"h6\">\n                        {t('core:title')}\n                    </Typography>\n                }\n            />\n            <NavigationDrawer\n                open={drawerOpen}\n                setOpen={setDrawerOpen}\n                setTheme={props.setTheme}\n                setLangOpen={setLangOpen}\n            >\n                {props.fileTree}\n            </NavigationDrawer>\n            <LanguageDialogue open={langOpen} setLang={(value: string) => {\n                i18n.changeLanguage(value);\n                setLangOpen(false);\n            }} />\n            <DrawerAdjust active={drawerOpen}>\n                {props.children}\n            </DrawerAdjust>\n        </>\n    );\n}\n","import React from 'react';\nimport {createUseStyles} from 'react-jss';\n\ninterface CentredProps {\n    children: React.ReactNode;\n    verticalAlign?: 'top' | 'centre' | 'bottom';\n    horizontalAlign?: 'left' | 'centre' | 'right';\n}\n\nconst useStyles = createUseStyles({\n    base: {\n        display: 'flex',\n        height: '100%',\n        width: '100%',\n    },\n    top: {\n        alignItems: 'flex-start',\n    },\n    vcentre: {\n        alignItems: 'center',\n    },\n    bottom: {\n        alignItems: 'flex-end',\n    },\n    left: {\n        justifyContent: 'flex-start',\n    },\n    hcentre: {\n        justifyContent: 'center',\n    },\n    right: {\n        justifyContent: 'flex-end',\n    },\n});\n\nexport function Centred({children, verticalAlign, horizontalAlign}: CentredProps) {\n    const classes = useStyles();\n    const VERT_OPTIONS = {\n        top: classes.top,\n        centre: classes.vcentre,\n        bottom: classes.bottom,\n    };\n    const HOR_OPTIONS = {\n        left: classes.left,\n        centre: classes.hcentre,\n        right: classes.right,\n    };\n    return <div className={classes.base + ' ' + VERT_OPTIONS[verticalAlign ?? 'centre'] + ' ' + HOR_OPTIONS[horizontalAlign ?? 'centre']}>\n        {children}\n    </div>;\n}","import {useMediaQuery, useTheme} from '@material-ui/core';\nimport React from 'react';\n\ninterface DrawerAdjustProps {\n    active: boolean;\n    children: React.ReactNode;\n}\nexport function DrawerAdjust(props: DrawerAdjustProps) {\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.up('sm'));\n    return (\n        <div style={{paddingLeft: 240 * (+props.active) * (+matches), transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms'}}>\n            {props.children}\n        </div>\n    );\n}\n","import {Drawer, Hidden, ListItem, ListItemIcon, ListItemText, Toolbar, useTheme} from '@material-ui/core';\nimport {Language} from '@material-ui/icons';\nimport DarkModeIcon from '@material-ui/icons/Brightness4';\nimport LightModeIcon from '@material-ui/icons/Brightness7';\nimport {useTranslation} from 'react-i18next';\nimport {ThemeName} from '../themes';\n\ninterface DrawerContentProps {\n    onSelect?: () => void;\n    setTheme: (theme: ThemeName) => void;\n    setLangOpen: (value: boolean) => void;\n    children: React.ReactNode;\n}\nfunction DrawerContent({\n    onSelect,\n    setTheme,\n    setLangOpen,\n    children,\n}: DrawerContentProps) {\n    const {t} = useTranslation('core');\n    const theme = useTheme();\n    const newTheme: ThemeName = theme.name === 'dark' ? 'light' : 'dark';\n    return <>\n        {children}\n        <div style={{flexGrow: 1}} />\n        <ListItem button onClick={() => {setLangOpen(true); if (onSelect) {onSelect();} }}>\n            <ListItemIcon>\n                <Language />\n            </ListItemIcon>\n            <ListItemText primary={t('core:sidebar.lang')} />\n        </ListItem>\n        <ListItem button onClick={() => {setTheme(newTheme); if (onSelect) {onSelect();} }}>\n            <ListItemIcon>\n                {\n                    newTheme === 'dark'\n                        ? <DarkModeIcon />\n                        : <LightModeIcon />\n                }\n            </ListItemIcon>\n            <ListItemText primary={t('core:sidebar.theme')} />\n        </ListItem>\n    </>;\n}\n\ninterface NavigationDrawerProps {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n    setTheme: (theme: ThemeName) => void;\n    setLangOpen: (value: boolean) => void;\n    children: React.ReactNode;\n}\n\n\nexport function NavigationDrawer(props: NavigationDrawerProps) {\n    const theme = useTheme();\n    const container = window !== undefined ? () => window.document.body : undefined;\n    return <>\n        <Hidden smUp>\n            <Drawer\n                variant=\"temporary\"\n                container={container}\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n                onClose={() => props.setOpen(false)}\n            >\n                <DrawerContent\n                    onSelect={() => props.setOpen(false)}\n                    setTheme={props.setTheme}\n                    setLangOpen={props.setLangOpen}\n                >\n                    {props.children}\n                </DrawerContent>\n            </Drawer>\n        </Hidden>\n        <Hidden xsDown>\n            <Drawer\n                variant=\"persistent\"\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={props.open}\n            >\n                <Toolbar />\n                <DrawerContent\n                    setTheme={props.setTheme}\n                    setLangOpen={props.setLangOpen}\n                >\n                    {props.children}\n                </DrawerContent>\n            </Drawer>\n        </Hidden>\n    </>;\n}\n","import {ThemeName} from \"./themes\";\n\ndeclare global {\n    interface String {\n        capitalise: () => String;\n    }\n    interface Array<T> {\n        rotated: (by: number) => Array<T>;\n        rotate: (by: number) => Array<T>;\n        count: (elem: T) => number;\n    }\n}\n// eslint-disable-next-line no-extend-native\nString.prototype.capitalise = function () {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n};\n// eslint-disable-next-line no-extend-native\nArray.prototype.rotated = function (by: number) {\n    by = by % this.length;\n    return this.slice(by, this.length).concat(this.slice(0, by));\n};\n// eslint-disable-next-line no-extend-native\nArray.prototype.rotate = function (by: number) {\n    by = by % this.length;\n    while (this.length && by < 0) by += this.length;\n    this.push.apply(this, this.splice(0, by));\n    return this;\n};\n// eslint-disable-next-line no-extend-native\nArray.prototype.count = function (elem) {\n    return this.filter(item => item === elem).length;\n};\n\ndeclare module \"react\" {\n    interface CSSProperties {\n        '--progress'?: string | number;\n    }\n}\n\ndeclare module \"@material-ui/core/styles/createTheme\" {\n    interface Theme {\n        name: ThemeName;\n    }\n}\n\ndeclare module \"@material-ui/core/styles/createPalette\" {\n    interface ElevationColourValue {\n        main: string;\n    }\n\n    interface ElevationColour {\n        0: ElevationColourValue;\n        1: ElevationColourValue;\n        2: ElevationColourValue;\n        3: ElevationColourValue;\n        4: ElevationColourValue;\n        6: ElevationColourValue;\n        8: ElevationColourValue;\n        12: ElevationColourValue;\n        16: ElevationColourValue;\n        24: ElevationColourValue;\n    }\n    interface Palette {\n        elevations: ElevationColour;\n        opacity: number;\n    }\n    interface PaletteOptions {\n        elevations: ElevationColour;\n        opacity: number;\n    }\n}\nexport {};\n","import {ComponentsProps} from \"@material-ui/core/styles/props\";\n\nconst commonProps: ComponentsProps = {\n    MuiTextField: {\n        variant: 'filled',\n    },\n    MuiSelect: {\n        variant: 'filled',\n    },\n    MuiFormControl: {\n        variant: 'filled',\n    },\n    MuiDialogTitle: {\n        style: {textAlign: 'center'},\n    }\n};\nexport {commonProps};\n","import {createTheme} from '@material-ui/core/styles';\nimport '../prototype_mods';\nimport {commonProps} from './common_theme_data';\n\n\n// Dark theme\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n        opacity: 0.3,\n        elevations: {\n            0: {main: '#1e1e1e'},\n            1: {main: '#292929'},\n            2: {main: '#2e2e2e'},\n            3: {main: '#303030'},\n            4: {main: '#323232'},\n            6: {main: '#373737'},\n            8: {main: '#393939'},\n            12: {main: '#3e3e3e'},\n            16: {main: '#404040'},\n            24: {main: '#424242'},\n        },\n        primary: {\n            main: '#bb86fc',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        secondary: {\n            main: '#03dac6',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#cf6679',\n        },\n        background: {\n            paper: '#1e1e1e',\n            default: '#121212'\n        },\n        text: {\n            primary: 'rgba(255,255,255,87%)',\n            secondary: 'rgba(255,255,255,60%)',\n            hint: 'rgba(255,255,255,60%)',\n            disabled: 'rgba(255,255,255,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiAppBar: {\n        colorPrimary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.primary.main,\n        },\n        colorSecondary: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.secondary.main,\n        },\n        colorDefault: {\n            backgroundColor: theme.palette.background.paper,\n            color: theme.palette.text.primary,\n        }\n    },\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'rgba(255, 255, 255, 8%)',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n    MuiListItemIcon: {\n        root: {\n            color: theme.palette.text.secondary,\n        }\n    }\n};\n\nexport default theme;","import {createTheme} from '@material-ui/core/styles';\nimport '../prototype_mods';\nimport {commonProps} from './common_theme_data';\n\n// Normal or default theme\nconst theme = createTheme({\n    palette: {\n        type: 'light',\n        opacity: 0.6,\n        elevations: {\n            0: {main: '#ffffff'},\n            1: {main: '#ffffff'},\n            2: {main: '#ffffff'},\n            3: {main: '#ffffff'},\n            4: {main: '#ffffff'},\n            6: {main: '#ffffff'},\n            8: {main: '#ffffff'},\n            12: {main: '#ffffff'},\n            16: {main: '#ffffff'},\n            24: {main: '#ffffff'},\n        },\n        primary: {\n            main: '#6200ee',\n            contrastText: 'rgba(255,255,255,87%)',\n        },\n        secondary: {\n            main: '#03dac6',\n            contrastText: 'rgba(0,0,0,87%)',\n        },\n        error: {\n            main: '#b00020',\n        },\n        background: {\n            paper: '#ffffff',\n            default: '#eeeeee'\n        },\n        text: {\n            primary: 'rgba(0,0,0,87%)',\n            secondary: 'rgba(0,0,0,60%)',\n            hint: 'rgba(0,0,0,60%)',\n            disabled: 'rgba(0,0,0,38%)',\n        }\n    },\n    zIndex: {\n        appBar: 1250\n    },\n    props: commonProps,\n});\n\ntheme.overrides = {\n    MuiDrawer: {\n        paper: {\n            width: 240\n        }\n    },\n    MuiCard: {\n        root: {\n            borderWidth: 1,\n            borderColor: 'transparent',\n            borderStyle: 'solid',\n        },\n    },\n    MuiCardHeader: {\n        root: {\n            paddingBottom: 0,\n            textAlign: 'center',\n        },\n    },\n};\n\nexport default theme;","import dark from './dark';\nimport light from './light';\n\ndark.name = 'dark';\nlight.name = 'light';\n\nconst themes = {\n    light,\n    dark,\n};\n\nexport type ThemeName = keyof typeof themes;\n\nexport default function getTheme(theme: ThemeName) {\n    return themes[theme];\n}","import {CssBaseline, ThemeProvider, Typography} from \"@material-ui/core\";\nimport {useMemo, useState} from \"react\";\nimport {AppFrame, Centred} from \"./components\";\nimport getTheme, {ThemeName} from \"./themes\";\n\nexport type Settings = {\n    theme: ThemeName;\n};\nexport const defaultSettings: Settings = {\n    theme: 'dark',\n};\n\nfunction App() {\n    if (!window.localStorage.settings) {\n        window.localStorage.settings = JSON.stringify(defaultSettings);\n    }\n    const [settings, setSettingsImpl] = useState<Settings>(() => JSON.parse(window.localStorage.settings));\n    function setSettings(value: Settings) {\n        window.localStorage.settings = JSON.stringify(value);\n        setSettingsImpl(value);\n    }\n    function setTheme(value: 'dark' | 'light') {\n        document.body.classList.add(\"no-transition\");\n        setSettings({...settings, theme: value});\n        // document.body.classList.remove(\"no-transition\");\n        setTimeout(() => document.body.classList.remove(\"no-transition\"), 10);\n    }\n    const theme = useMemo(\n        () => getTheme(settings.theme),\n        [settings]\n    );\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppFrame fileTree={<>...</>} setTheme={setTheme}>\n                <Centred>\n                    <Typography>\n                        Hello world!!\n                    </Typography>\n                </Centred>\n            </AppFrame>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Suspense fallback={<div>Loading...</div>}>\n        <App />\n    </Suspense>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}